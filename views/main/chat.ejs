<link href='http://fonts.googleapis.com/css?family=Happy+Monkey' rel='stylesheet' type='text/css'>
<h2>Welcome <%= username %></h2>
<div id="messagesContainer">
</div>
<div id="newMessageForm">
    <textarea id="message" placeholder="Enter your message here:"></textarea>
    <br>
    <button id="postMessageButton">Add Message</button>
</div>

<script>
	var username;

    var MessageModel = Backbone.Model.extend({
        urlRoot: '/messages',
    });

    var SailsCollection = Backbone.Collection.extend({
        sailsCollection: "",
        socket: null,
        sync: function(method, model, options){
            var where = {};
            if (options.where) {
                where = {
                    where: options.where
                }
            }       
            if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
                this.socket = io.connect();
                this.socket.on("connect", _.bind(function(){
                    this.socket.request("/" + this.sailsCollection, where, _.bind(function(users){
                        this.set(users);
                    }, this));
         
                    this.socket.on("message", _.bind(function(msg){
                        var m = msg.verb.split("/").pop();
                        if (m === "create") {
                            this.add(msg.data);
                        } else if (m === "update") {
                            this.get(msg.data.id).set(msg.data);
                        } else if (m === "destroy") {
                            this.remove(this.get(msg.data.id));
                        }
                    }, this));
                }, this));
            } else {
                console.log("Error: Cannot retrieve models because property 'sailsCollection' not set on the collection");
            }
        }
    });

    var MessageCollection = SailsCollection.extend({
        url: '/messages',
        sailsCollection: 'messages',
        model: MessageModel
    });
 
    var messages = new MessageCollection();
    messages.fetch();
 
    $("#postMessageButton").click(function(){
        var messageText = $("#message").val();
        if(!username) username = $('h2').text().split(' ')[1];
        messages.create({message: messageText, username: username}, {wait: true});
        $("#message").val("");
    });

  _.templateSettings = {
    interpolate : /\{\{(.+?)\}\}/g
	};

	var MessagesView = Backbone.View.extend({
	    el: '#messagesContainer',
	    initialize: function () {
	        this.collection.on('add', this.render, this);
	        this.render();
	    },
	    template: _.template("<div><p><b>{{ username }}: </b>{{ message }}</p></div>"),
	        render: function () {
	            this.$el.html("");
	            this.collection.each(function(msg){
	                this.$el.append(this.template(msg.toJSON()));
	            }, this)
	    }
	});
 
	var mView = new MessagesView({collection: messages});
</script>

<style>
    body {
        text-align: left;
        padding-left: 10px;
        background-color: #ECF1F1;
    }
    h2 {
        text-align: center;
        font-family: "Happy Monkey";
    }
    #messagesContainer {
        text-align: left;
        width: 100px;
        height: 300px;
        display: inline;
        margin-left: 20px;
        font-family: "Happy Monkey";
    }
    #newMessageForm {
        margin-bottom: 50px;
    }
    textarea {
        border-radius: 10px;
        width: 200px;
        height: 70px;
        outline: none;
        border: 1px solid black;
        padding-left: 5px;
        padding-top: 5px;
        font-family: "Happy Monkey";
    }

    button {
        outline: none;
        height: 30px;
        border: 1px solid limegreen;
        font-family: "Happy Monkey";
        border-radius: 10px;
        color: limegreen;
        transition: color 1s, background-color 0.5s;

    }
    button:hover, button:focus {
        background-color: limegreen;
        color: white;
    }
</style>